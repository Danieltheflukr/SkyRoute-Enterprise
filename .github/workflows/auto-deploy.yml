name: SkyRoute-Enterprise - Auto Deploy (GHCR Only 🚀)

on:
  push:
    branches:
      - "main"

jobs:
  docker:
    name: Build & Push Docker Image to GHCR
    runs-on: ubuntu-latest

    steps:
      # ✅ 取得原始碼
      - name: Checkout source code
        uses: actions/checkout@v4

      # ✅ 設定多平台支援
      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ✅ 登入 GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ✅ 生成 Docker Tag（格式安全，無特殊字元問題）
      - name: Generate safe version tag
        run: |
          VERSION=$(grep -oP '(?<=ARG CLOUDFLARED_VERSION=).*' Dockerfile || echo "2025.4.0")
          if [ -z "$VERSION" ]; then VERSION="2025.4.0"; fi
          DATE_TAG=$(date +'%Y%m%d')
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          FINAL_TAG="${VERSION}-${DATE_TAG}-${COMMIT_SHA}"
          FINAL_TAG=$(echo $FINAL_TAG | tr -d '\n' | sed 's/[^a-zA-Z0-9._-]//g') # 清理不合法字元
          echo "DOCKER_TAG=${FINAL_TAG}" >> $GITHUB_ENV
          echo "🔥 Docker tag generated: ${FINAL_TAG}"

      # ✅ Build & Push Image to GHCR
      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/armhf
          push: true
          tags: |
            ghcr.io/danieltheflukr/skyroute-enterprise:${{ env.DOCKER_TAG }}
            ghcr.io/danieltheflukr/skyroute-enterprise:latest

      # ✅ 完成提示
      - name: Notify build success
        run: echo "✅ SkyRoute-Enterprise image pushed to GHCR successfully!"

  # 🚀 預留：將來如需 Worker 自動部署，可以取消註解此區塊
  # worker:
  #   name: Deploy Cloudflare Worker
  #   runs-on: ubuntu-latest
  #   needs: docker
  #
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4
  #
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #
  #     - name: Install Wrangler CLI
  #       run: npm install -g wrangler
  #
  #     - name: Publish to Cloudflare Worker
  #       env:
  #         CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #       run: wrangler deploy
  #
  #     - name: Notify Worker deploy success
  #       if: success()
  #       run: echo "✅ SkyRoute-Enterprise Cloudflare Worker deployed successfully!"
  #
  #     - name: Notify Worker deploy failure
  #       if: failure()
  #       run: echo "❌ SkyRoute-Enterprise Cloudflare Worker deploy failed!"
